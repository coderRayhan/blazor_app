@page "/pages/employees"
@using EmployeeManagement.Web.Pages.Employees.Components;
@using EmployeeManagement.Domain.Entities;
@using EmployeeManagement.Web.Services
@inject FormDialogService2 dialogService
<MudButton Variant="Variant.Outlined" Color="Color.Primary"  Size="Size.Small" StartIcon="@Icons.Material.Filled.Add"
           IconColor="Color.Surface" Disabled="false" OnClick="OpenFormDialog">
           Add New
</MudButton>

@code {
    private async Task OnCreate()
    {
        var Employee = new Employee();
        var param = new DialogParameters<EmployeeFormDialog>
        {
            {x => x.Model, Employee}
        };
        await ShowFormDialog("Create Employee", param);
    }

    private async Task ShowFormDialog(string title, DialogParameters param)

    {
        var options = new DialogOptions
            {
                CloseButton = true,
                CloseOnEscapeKey = false,
                MaxWidth = MaxWidth.Medium,
                FullWidth = true,
                DisableBackdropClick = true,

            };
        var dialog = DialogService.Show<EmployeeFormDialog>(title, param, options);
        var state = await dialog.Result;
        if (!state.Canceled)
        {

        }
    }


    //calling dynamic form dialog
    private async void OpenFormDialog()
    {
        var dialogRef = dialogService.ShowFormDialog<Dummy, Employee>("Create Form", new Employee());
        var state = await dialogRef.Result;
        if (state.Cancelled)
        {
            
        }
    }
}